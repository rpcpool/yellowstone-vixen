//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

pub(crate) mod r#add_liquidity_parameters;
pub(crate) mod r#base_fee_config;
pub(crate) mod r#base_fee_parameters;
pub(crate) mod r#base_fee_struct;
pub(crate) mod r#dynamic_fee_config;
pub(crate) mod r#dynamic_fee_parameters;
pub(crate) mod r#dynamic_fee_struct;
pub(crate) mod r#evt_add_liquidity;
pub(crate) mod r#evt_claim_partner_fee;
pub(crate) mod r#evt_claim_position_fee;
pub(crate) mod r#evt_claim_protocol_fee;
pub(crate) mod r#evt_claim_reward;
pub(crate) mod r#evt_close_claim_fee_operator;
pub(crate) mod r#evt_close_config;
pub(crate) mod r#evt_close_position;
pub(crate) mod r#evt_create_claim_fee_operator;
pub(crate) mod r#evt_create_config;
pub(crate) mod r#evt_create_dynamic_config;
pub(crate) mod r#evt_create_position;
pub(crate) mod r#evt_create_token_badge;
pub(crate) mod r#evt_fund_reward;
pub(crate) mod r#evt_initialize_pool;
pub(crate) mod r#evt_initialize_reward;
pub(crate) mod r#evt_liquidity_change;
pub(crate) mod r#evt_lock_position;
pub(crate) mod r#evt_permanent_lock_position;
pub(crate) mod r#evt_remove_liquidity;
pub(crate) mod r#evt_set_pool_status;
pub(crate) mod r#evt_split_position2;
pub(crate) mod r#evt_swap;
pub(crate) mod r#evt_swap2;
pub(crate) mod r#evt_update_reward_duration;
pub(crate) mod r#evt_update_reward_funder;
pub(crate) mod r#evt_withdraw_ineligible_reward;
pub(crate) mod r#initialize_customizable_pool_parameters;
pub(crate) mod r#pool_fee_parameters;
pub(crate) mod r#pool_fees_config;
pub(crate) mod r#pool_fees_struct;
pub(crate) mod r#pool_metrics;
pub(crate) mod r#position_metrics;
pub(crate) mod r#remove_liquidity_parameters;
pub(crate) mod r#reward_info;
pub(crate) mod r#split_amount_info;
pub(crate) mod r#split_position_info;
pub(crate) mod r#split_position_parameters2;
pub(crate) mod r#swap_parameters;
pub(crate) mod r#swap_parameters2;
pub(crate) mod r#swap_result;
pub(crate) mod r#swap_result2;
pub(crate) mod r#user_reward_info;

pub use self::r#add_liquidity_parameters::*;
pub use self::r#base_fee_config::*;
pub use self::r#base_fee_parameters::*;
pub use self::r#base_fee_struct::*;
pub use self::r#dynamic_fee_config::*;
pub use self::r#dynamic_fee_parameters::*;
pub use self::r#dynamic_fee_struct::*;
pub use self::r#evt_add_liquidity::*;
pub use self::r#evt_claim_partner_fee::*;
pub use self::r#evt_claim_position_fee::*;
pub use self::r#evt_claim_protocol_fee::*;
pub use self::r#evt_claim_reward::*;
pub use self::r#evt_close_claim_fee_operator::*;
pub use self::r#evt_close_config::*;
pub use self::r#evt_close_position::*;
pub use self::r#evt_create_claim_fee_operator::*;
pub use self::r#evt_create_config::*;
pub use self::r#evt_create_dynamic_config::*;
pub use self::r#evt_create_position::*;
pub use self::r#evt_create_token_badge::*;
pub use self::r#evt_fund_reward::*;
pub use self::r#evt_initialize_pool::*;
pub use self::r#evt_initialize_reward::*;
pub use self::r#evt_liquidity_change::*;
pub use self::r#evt_lock_position::*;
pub use self::r#evt_permanent_lock_position::*;
pub use self::r#evt_remove_liquidity::*;
pub use self::r#evt_set_pool_status::*;
pub use self::r#evt_split_position2::*;
pub use self::r#evt_swap::*;
pub use self::r#evt_swap2::*;
pub use self::r#evt_update_reward_duration::*;
pub use self::r#evt_update_reward_funder::*;
pub use self::r#evt_withdraw_ineligible_reward::*;
pub use self::r#initialize_customizable_pool_parameters::*;
pub use self::r#pool_fee_parameters::*;
pub use self::r#pool_fees_config::*;
pub use self::r#pool_fees_struct::*;
pub use self::r#pool_metrics::*;
pub use self::r#position_metrics::*;
pub use self::r#remove_liquidity_parameters::*;
pub use self::r#reward_info::*;
pub use self::r#split_amount_info::*;
pub use self::r#split_position_info::*;
pub use self::r#split_position_parameters2::*;
pub use self::r#swap_parameters::*;
pub use self::r#swap_parameters2::*;
pub use self::r#swap_result::*;
pub use self::r#swap_result2::*;
pub use self::r#user_reward_info::*;
