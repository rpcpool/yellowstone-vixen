//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!
syntax = "proto3";

package vixen.parser.meteora_amm;

message AddLiquidityIx {
	AddLiquidityIxAccounts accounts = 1;
	AddLiquidityIxData data = 2;
}

message ClaimPartnerFeeIx {
	ClaimPartnerFeeIxAccounts accounts = 1;
	ClaimPartnerFeeIxData data = 2;
}

message ClaimPositionFeeIx {
	ClaimPositionFeeIxAccounts accounts = 1;
}

message ClaimProtocolFeeIx {
	ClaimProtocolFeeIxAccounts accounts = 1;
	ClaimProtocolFeeIxData data = 2;
}

message ClaimRewardIx {
	ClaimRewardIxAccounts accounts = 1;
	ClaimRewardIxData data = 2;
}

message CloseClaimFeeOperatorIx {
	CloseClaimFeeOperatorIxAccounts accounts = 1;
}

message CloseConfigIx {
	CloseConfigIxAccounts accounts = 1;
}

message ClosePositionIx {
	ClosePositionIxAccounts accounts = 1;
}

message CloseTokenBadgeIx {
	CloseTokenBadgeIxAccounts accounts = 1;
}

message CreateClaimFeeOperatorIx {
	CreateClaimFeeOperatorIxAccounts accounts = 1;
}

message CreateConfigIx {
	CreateConfigIxAccounts accounts = 1;
	CreateConfigIxData data = 2;
}

message CreateDynamicConfigIx {
	CreateDynamicConfigIxAccounts accounts = 1;
	CreateDynamicConfigIxData data = 2;
}

message CreatePositionIx {
	CreatePositionIxAccounts accounts = 1;
}

message CreateTokenBadgeIx {
	CreateTokenBadgeIxAccounts accounts = 1;
}

message FundRewardIx {
	FundRewardIxAccounts accounts = 1;
	FundRewardIxData data = 2;
}

message InitializeCustomizablePoolIx {
	InitializeCustomizablePoolIxAccounts accounts = 1;
	InitializeCustomizablePoolIxData data = 2;
}

message InitializePoolIx {
	InitializePoolIxAccounts accounts = 1;
	InitializePoolIxData data = 2;
}

message InitializePoolWithDynamicConfigIx {
	InitializePoolWithDynamicConfigIxAccounts accounts = 1;
	InitializePoolWithDynamicConfigIxData data = 2;
}

message InitializeRewardIx {
	InitializeRewardIxAccounts accounts = 1;
	InitializeRewardIxData data = 2;
}

message LockPositionIx {
	LockPositionIxAccounts accounts = 1;
	LockPositionIxData data = 2;
}

message PermanentLockPositionIx {
	PermanentLockPositionIxAccounts accounts = 1;
	PermanentLockPositionIxData data = 2;
}

message RefreshVestingIx {
	RefreshVestingIxAccounts accounts = 1;
}

message RemoveAllLiquidityIx {
	RemoveAllLiquidityIxAccounts accounts = 1;
	RemoveAllLiquidityIxData data = 2;
}

message RemoveLiquidityIx {
	RemoveLiquidityIxAccounts accounts = 1;
	RemoveLiquidityIxData data = 2;
}

message SetPoolStatusIx {
	SetPoolStatusIxAccounts accounts = 1;
	SetPoolStatusIxData data = 2;
}

message SplitPositionIx {
	SplitPositionIxAccounts accounts = 1;
	SplitPositionIxData data = 2;
}

message SplitPosition2Ix {
	SplitPosition2IxAccounts accounts = 1;
	SplitPosition2IxData data = 2;
}

message SwapIx {
	SwapIxAccounts accounts = 1;
	SwapIxData data = 2;
}

message Swap2Ix {
	Swap2IxAccounts accounts = 1;
	Swap2IxData data = 2;
}

message UpdateRewardDurationIx {
	UpdateRewardDurationIxAccounts accounts = 1;
	UpdateRewardDurationIxData data = 2;
}

message UpdateRewardFunderIx {
	UpdateRewardFunderIxAccounts accounts = 1;
	UpdateRewardFunderIxData data = 2;
}

message WithdrawIneligibleRewardIx {
	WithdrawIneligibleRewardIxAccounts accounts = 1;
	WithdrawIneligibleRewardIxData data = 2;
}


message AddLiquidityParameters {
	string liquidity_delta = 1;
	uint64 token_a_amount_threshold = 2;
	uint64 token_b_amount_threshold = 3;
}

message BaseFeeConfig {
	uint64 cliff_fee_numerator = 1;
	uint32 base_fee_mode = 2;
	repeated uint32 padding = 3;
	uint32 first_factor = 4;
	repeated uint32 second_factor = 5;
	uint64 third_factor = 6;
}

message BaseFeeParameters {
	uint64 cliff_fee_numerator = 1;
	uint32 first_factor = 2;
	repeated uint32 second_factor = 3;
	uint64 third_factor = 4;
	uint32 base_fee_mode = 5;
}

message BaseFeeStruct {
	uint64 cliff_fee_numerator = 1;
	uint32 base_fee_mode = 2;
	repeated uint32 padding0 = 3;
	uint32 first_factor = 4;
	repeated uint32 second_factor = 5;
	uint64 third_factor = 6;
	uint64 padding1 = 7;
}

message DynamicFeeConfig {
	uint32 initialized = 1;
	repeated uint32 padding = 2;
	uint32 max_volatility_accumulator = 3;
	uint32 variable_fee_control = 4;
	uint32 bin_step = 5;
	uint32 filter_period = 6;
	uint32 decay_period = 7;
	uint32 reduction_factor = 8;
	repeated uint32 padding1 = 9;
	string bin_step_u128 = 10;
}

message DynamicFeeParameters {
	uint32 bin_step = 1;
	string bin_step_u128 = 2;
	uint32 filter_period = 3;
	uint32 decay_period = 4;
	uint32 reduction_factor = 5;
	uint32 max_volatility_accumulator = 6;
	uint32 variable_fee_control = 7;
}

message DynamicFeeStruct {
	uint32 initialized = 1;
	repeated uint32 padding = 2;
	uint32 max_volatility_accumulator = 3;
	uint32 variable_fee_control = 4;
	uint32 bin_step = 5;
	uint32 filter_period = 6;
	uint32 decay_period = 7;
	uint32 reduction_factor = 8;
	uint64 last_update_timestamp = 9;
	string bin_step_u128 = 10;
	string sqrt_price_reference = 11;
	string volatility_accumulator = 12;
	string volatility_reference = 13;
}

message EvtAddLiquidity {
	string pool = 1;
	string position = 2;
	string owner = 3;
	AddLiquidityParameters params = 4;
	uint64 token_a_amount = 5;
	uint64 token_b_amount = 6;
	uint64 total_amount_a = 7;
	uint64 total_amount_b = 8;
}

message EvtClaimPartnerFee {
	string pool = 1;
	uint64 token_a_amount = 2;
	uint64 token_b_amount = 3;
}

message EvtClaimPositionFee {
	string pool = 1;
	string position = 2;
	string owner = 3;
	uint64 fee_a_claimed = 4;
	uint64 fee_b_claimed = 5;
}

message EvtClaimProtocolFee {
	string pool = 1;
	uint64 token_a_amount = 2;
	uint64 token_b_amount = 3;
}

message EvtClaimReward {
	string pool = 1;
	string position = 2;
	string owner = 3;
	string mint_reward = 4;
	uint32 reward_index = 5;
	uint64 total_reward = 6;
}

message EvtCloseClaimFeeOperator {
	string claim_fee_operator = 1;
	string operator = 2;
}

message EvtCloseConfig {
	string config = 1;
	string admin = 2;
}

message EvtClosePosition {
	string pool = 1;
	string owner = 2;
	string position = 3;
	string position_nft_mint = 4;
}

message EvtCreateClaimFeeOperator {
	string operator = 1;
}

message EvtCreateConfig {
	PoolFeeParameters pool_fees = 1;
	string vault_config_key = 2;
	string pool_creator_authority = 3;
	uint32 activation_type = 4;
	string sqrt_min_price = 5;
	string sqrt_max_price = 6;
	uint32 collect_fee_mode = 7;
	uint64 index = 8;
	string config = 9;
}

message EvtCreateDynamicConfig {
	string config = 1;
	string pool_creator_authority = 2;
	uint64 index = 3;
}

message EvtCreatePosition {
	string pool = 1;
	string owner = 2;
	string position = 3;
	string position_nft_mint = 4;
}

message EvtCreateTokenBadge {
	string token_mint = 1;
}

message EvtFundReward {
	string pool = 1;
	string funder = 2;
	string mint_reward = 3;
	uint32 reward_index = 4;
	uint64 amount = 5;
	uint64 transfer_fee_excluded_amount_in = 6;
	uint64 reward_duration_end = 7;
	string pre_reward_rate = 8;
	string post_reward_rate = 9;
}

message EvtInitializePool {
	string pool = 1;
	string token_a_mint = 2;
	string token_b_mint = 3;
	string creator = 4;
	string payer = 5;
	string alpha_vault = 6;
	PoolFeeParameters pool_fees = 7;
	string sqrt_min_price = 8;
	string sqrt_max_price = 9;
	uint32 activation_type = 10;
	uint32 collect_fee_mode = 11;
	string liquidity = 12;
	string sqrt_price = 13;
	uint64 activation_point = 14;
	uint32 token_a_flag = 15;
	uint32 token_b_flag = 16;
	uint64 token_a_amount = 17;
	uint64 token_b_amount = 18;
	uint64 total_amount_a = 19;
	uint64 total_amount_b = 20;
	uint32 pool_type = 21;
}

message EvtInitializeReward {
	string pool = 1;
	string reward_mint = 2;
	string funder = 3;
	string creator = 4;
	uint32 reward_index = 5;
	uint64 reward_duration = 6;
}

message EvtLiquidityChange {
	string pool = 1;
	string position = 2;
	string owner = 3;
	uint64 token_a_amount = 4;
	uint64 token_b_amount = 5;
	uint64 transfer_fee_included_token_a_amount = 6;
	uint64 transfer_fee_included_token_b_amount = 7;
	uint64 reserve_a_amount = 8;
	uint64 reserve_b_amount = 9;
	string liquidity_delta = 10;
	uint64 token_a_amount_threshold = 11;
	uint64 token_b_amount_threshold = 12;
	uint32 change_type = 13;
}

message EvtLockPosition {
	string pool = 1;
	string position = 2;
	string owner = 3;
	string vesting = 4;
	uint64 cliff_point = 5;
	uint64 period_frequency = 6;
	string cliff_unlock_liquidity = 7;
	string liquidity_per_period = 8;
	uint32 number_of_period = 9;
}

message EvtPermanentLockPosition {
	string pool = 1;
	string position = 2;
	string lock_liquidity_amount = 3;
	string total_permanent_locked_liquidity = 4;
}

message EvtRemoveLiquidity {
	string pool = 1;
	string position = 2;
	string owner = 3;
	RemoveLiquidityParameters params = 4;
	uint64 token_a_amount = 5;
	uint64 token_b_amount = 6;
}

message EvtSetPoolStatus {
	string pool = 1;
	uint32 status = 2;
}

message EvtSplitPosition2 {
	string pool = 1;
	string first_owner = 2;
	string second_owner = 3;
	string first_position = 4;
	string second_position = 5;
	string current_sqrt_price = 6;
	SplitAmountInfo amount_splits = 7;
	SplitPositionInfo first_position_info = 8;
	SplitPositionInfo second_position_info = 9;
	SplitPositionParameters2 split_position_parameters = 10;
}

message EvtSwap {
	string pool = 1;
	uint32 trade_direction = 2;
	bool has_referral = 3;
	SwapParameters params = 4;
	SwapResult swap_result = 5;
	uint64 actual_amount_in = 6;
	uint64 current_timestamp = 7;
}

message EvtSwap2 {
	string pool = 1;
	uint32 trade_direction = 2;
	uint32 collect_fee_mode = 3;
	bool has_referral = 4;
	SwapParameters2 params = 5;
	SwapResult2 swap_result = 6;
	uint64 included_transfer_fee_amount_in = 7;
	uint64 included_transfer_fee_amount_out = 8;
	uint64 excluded_transfer_fee_amount_out = 9;
	uint64 current_timestamp = 10;
	uint64 reserve_a_amount = 11;
	uint64 reserve_b_amount = 12;
}

message EvtUpdateRewardDuration {
	string pool = 1;
	uint32 reward_index = 2;
	uint64 old_reward_duration = 3;
	uint64 new_reward_duration = 4;
}

message EvtUpdateRewardFunder {
	string pool = 1;
	uint32 reward_index = 2;
	string old_funder = 3;
	string new_funder = 4;
}

message EvtWithdrawIneligibleReward {
	string pool = 1;
	string reward_mint = 2;
	uint64 amount = 3;
}

message InitializeCustomizablePoolParameters {
	PoolFeeParameters pool_fees = 1;
	string sqrt_min_price = 2;
	string sqrt_max_price = 3;
	bool has_alpha_vault = 4;
	string liquidity = 5;
	string sqrt_price = 6;
	uint32 activation_type = 7;
	uint32 collect_fee_mode = 8;
	optional uint64 activation_point = 9;
}

message PoolFeeParameters {
	BaseFeeParameters base_fee = 1;
	repeated uint32 padding = 2;
	optional DynamicFeeParameters dynamic_fee = 3;
}

message PoolFeesConfig {
	BaseFeeConfig base_fee = 1;
	DynamicFeeConfig dynamic_fee = 2;
	uint32 protocol_fee_percent = 3;
	uint32 partner_fee_percent = 4;
	uint32 referral_fee_percent = 5;
	repeated uint32 padding0 = 6;
	repeated uint64 padding1 = 7;
}

message PoolFeesStruct {
	BaseFeeStruct base_fee = 1;
	uint32 protocol_fee_percent = 2;
	uint32 partner_fee_percent = 3;
	uint32 referral_fee_percent = 4;
	repeated uint32 padding0 = 5;
	DynamicFeeStruct dynamic_fee = 6;
	repeated uint64 padding1 = 7;
}

message PoolMetrics {
	string total_lp_a_fee = 1;
	string total_lp_b_fee = 2;
	uint64 total_protocol_a_fee = 3;
	uint64 total_protocol_b_fee = 4;
	uint64 total_partner_a_fee = 5;
	uint64 total_partner_b_fee = 6;
	uint64 total_position = 7;
	uint64 padding = 8;
}

message PositionMetrics {
	uint64 total_claimed_a_fee = 1;
	uint64 total_claimed_b_fee = 2;
}

message RemoveLiquidityParameters {
	string liquidity_delta = 1;
	uint64 token_a_amount_threshold = 2;
	uint64 token_b_amount_threshold = 3;
}

message RewardInfo {
	uint32 initialized = 1;
	uint32 reward_token_flag = 2;
	repeated uint32 padding0 = 3;
	repeated uint32 padding1 = 4;
	string mint = 5;
	string vault = 6;
	string funder = 7;
	uint64 reward_duration = 8;
	uint64 reward_duration_end = 9;
	string reward_rate = 10;
	repeated uint32 reward_per_token_stored = 11;
	uint64 last_update_time = 12;
	uint64 cumulative_seconds_with_empty_liquidity_reward = 13;
}

message SplitAmountInfo {
	string permanent_locked_liquidity = 1;
	string unlocked_liquidity = 2;
	uint64 fee_a = 3;
	uint64 fee_b = 4;
	uint64 reward0 = 5;
	uint64 reward1 = 6;
}

message SplitPositionInfo {
	string liquidity = 1;
	uint64 fee_a = 2;
	uint64 fee_b = 3;
	uint64 reward0 = 4;
	uint64 reward1 = 5;
}

message SplitPositionParameters2 {
	uint32 unlocked_liquidity_numerator = 1;
	uint32 permanent_locked_liquidity_numerator = 2;
	uint32 fee_a_numerator = 3;
	uint32 fee_b_numerator = 4;
	uint32 reward0_numerator = 5;
	uint32 reward1_numerator = 6;
}

message SwapParameters {
	uint64 amount_in = 1;
	uint64 minimum_amount_out = 2;
}

message SwapParameters2 {
	uint64 amount0 = 1;
	uint64 amount1 = 2;
	uint32 swap_mode = 3;
}

message SwapResult {
	uint64 output_amount = 1;
	string next_sqrt_price = 2;
	uint64 lp_fee = 3;
	uint64 protocol_fee = 4;
	uint64 partner_fee = 5;
	uint64 referral_fee = 6;
}

message SwapResult2 {
	uint64 included_fee_input_amount = 1;
	uint64 excluded_fee_input_amount = 2;
	uint64 amount_left = 3;
	uint64 output_amount = 4;
	string next_sqrt_price = 5;
	uint64 trading_fee = 6;
	uint64 protocol_fee = 7;
	uint64 partner_fee = 8;
	uint64 referral_fee = 9;
}

message UserRewardInfo {
	repeated uint32 reward_per_token_checkpoint = 1;
	uint64 reward_pendings = 2;
	uint64 total_claimed_rewards = 3;
}


message ClaimFeeOperator {
	string operator = 1;
	repeated uint32 padding = 2;
}

message Config {
	string vault_config_key = 1;
	string pool_creator_authority = 2;
	PoolFeesConfig pool_fees = 3;
	uint32 activation_type = 4;
	uint32 collect_fee_mode = 5;
	uint32 config_type = 6;
	repeated uint32 padding0 = 7;
	uint64 index = 8;
	string sqrt_min_price = 9;
	string sqrt_max_price = 10;
	repeated uint64 padding1 = 11;
}

message Pool {
	PoolFeesStruct pool_fees = 1;
	string token_a_mint = 2;
	string token_b_mint = 3;
	string token_a_vault = 4;
	string token_b_vault = 5;
	string whitelisted_vault = 6;
	string partner = 7;
	string liquidity = 8;
	string padding = 9;
	uint64 protocol_a_fee = 10;
	uint64 protocol_b_fee = 11;
	uint64 partner_a_fee = 12;
	uint64 partner_b_fee = 13;
	string sqrt_min_price = 14;
	string sqrt_max_price = 15;
	string sqrt_price = 16;
	uint64 activation_point = 17;
	uint32 activation_type = 18;
	uint32 pool_status = 19;
	uint32 token_a_flag = 20;
	uint32 token_b_flag = 21;
	uint32 collect_fee_mode = 22;
	uint32 pool_type = 23;
	uint32 version = 24;
	uint32 padding0 = 25;
	repeated uint32 fee_a_per_liquidity = 26;
	repeated uint32 fee_b_per_liquidity = 27;
	string permanent_lock_liquidity = 28;
	PoolMetrics metrics = 29;
	string creator = 30;
	repeated uint64 padding1 = 31;
	repeated RewardInfo reward_infos = 32;
}

message Position {
	string pool = 1;
	string nft_mint = 2;
	repeated uint32 fee_a_per_token_checkpoint = 3;
	repeated uint32 fee_b_per_token_checkpoint = 4;
	uint64 fee_a_pending = 5;
	uint64 fee_b_pending = 6;
	string unlocked_liquidity = 7;
	string vested_liquidity = 8;
	string permanent_locked_liquidity = 9;
	PositionMetrics metrics = 10;
	repeated UserRewardInfo reward_infos = 11;
	repeated string padding = 12;
}

message TokenBadge {
	string token_mint = 1;
	repeated uint32 padding = 2;
}

message Vesting {
	string position = 1;
	uint64 cliff_point = 2;
	uint64 period_frequency = 3;
	string cliff_unlock_liquidity = 4;
	string liquidity_per_period = 5;
	string total_released_liquidity = 6;
	uint32 number_of_period = 7;
	repeated uint32 padding = 8;
	repeated string padding2 = 9;
}


message AddLiquidityIxAccounts {
	string pool = 1;
	string position = 2;
	string token_a_account = 3;
	string token_b_account = 4;
	string token_a_vault = 5;
	string token_b_vault = 6;
	string token_a_mint = 7;
	string token_b_mint = 8;
	string position_nft_account = 9;
	string owner = 10;
	string token_a_program = 11;
	string token_b_program = 12;
	string event_authority = 13;
	string program = 14;
}

message AddLiquidityIxData {
	AddLiquidityParameters params = 1;
}

message ClaimPartnerFeeIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string token_a_account = 3;
	string token_b_account = 4;
	string token_a_vault = 5;
	string token_b_vault = 6;
	string token_a_mint = 7;
	string token_b_mint = 8;
	string partner = 9;
	string token_a_program = 10;
	string token_b_program = 11;
	string event_authority = 12;
	string program = 13;
}

message ClaimPartnerFeeIxData {
	uint64 max_amount_a = 1;
	uint64 max_amount_b = 2;
}

message ClaimPositionFeeIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string position = 3;
	string token_a_account = 4;
	string token_b_account = 5;
	string token_a_vault = 6;
	string token_b_vault = 7;
	string token_a_mint = 8;
	string token_b_mint = 9;
	string position_nft_account = 10;
	string owner = 11;
	string token_a_program = 12;
	string token_b_program = 13;
	string event_authority = 14;
	string program = 15;
}


message ClaimProtocolFeeIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string token_a_vault = 3;
	string token_b_vault = 4;
	string token_a_mint = 5;
	string token_b_mint = 6;
	string token_a_account = 7;
	string token_b_account = 8;
	string claim_fee_operator = 9;
	string operator = 10;
	string token_a_program = 11;
	string token_b_program = 12;
	string event_authority = 13;
	string program = 14;
}

message ClaimProtocolFeeIxData {
	uint64 max_amount_a = 1;
	uint64 max_amount_b = 2;
}

message ClaimRewardIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string position = 3;
	string reward_vault = 4;
	string reward_mint = 5;
	string user_token_account = 6;
	string position_nft_account = 7;
	string owner = 8;
	string token_program = 9;
	string event_authority = 10;
	string program = 11;
}

message ClaimRewardIxData {
	uint32 reward_index = 1;
	uint32 skip_reward = 2;
}

message CloseClaimFeeOperatorIxAccounts {
	string claim_fee_operator = 1;
	string rent_receiver = 2;
	string admin = 3;
	string event_authority = 4;
	string program = 5;
}


message CloseConfigIxAccounts {
	string config = 1;
	string admin = 2;
	string rent_receiver = 3;
	string event_authority = 4;
	string program = 5;
}


message ClosePositionIxAccounts {
	string position_nft_mint = 1;
	string position_nft_account = 2;
	string pool = 3;
	string position = 4;
	string pool_authority = 5;
	string rent_receiver = 6;
	string owner = 7;
	string token_program = 8;
	string event_authority = 9;
	string program = 10;
}


message CloseTokenBadgeIxAccounts {
	string token_badge = 1;
	string admin = 2;
	string rent_receiver = 3;
	string event_authority = 4;
	string program = 5;
}


message CreateClaimFeeOperatorIxAccounts {
	string claim_fee_operator = 1;
	string operator = 2;
	string admin = 3;
	string system_program = 4;
	string event_authority = 5;
	string program = 6;
}


message CreateConfigIxAccounts {
	string config = 1;
	string admin = 2;
	string system_program = 3;
	string event_authority = 4;
	string program = 5;
}

message CreateConfigIxData {
	uint64 index = 1;
	PoolFeeParameters pool_fees = 2;
	string sqrt_min_price = 3;
	string sqrt_max_price = 4;
	string vault_config_key = 5;
	string pool_creator_authority = 6;
	uint32 activation_type = 7;
	uint32 collect_fee_mode = 8;
}

message CreateDynamicConfigIxAccounts {
	string config = 1;
	string admin = 2;
	string system_program = 3;
	string event_authority = 4;
	string program = 5;
}

message CreateDynamicConfigIxData {
	uint64 index = 1;
	string pool_creator_authority = 2;
}

message CreatePositionIxAccounts {
	string owner = 1;
	string position_nft_mint = 2;
	string position_nft_account = 3;
	string pool = 4;
	string position = 5;
	string pool_authority = 6;
	string payer = 7;
	string token_program = 8;
	string system_program = 9;
	string event_authority = 10;
	string program = 11;
}


message CreateTokenBadgeIxAccounts {
	string token_badge = 1;
	string token_mint = 2;
	string admin = 3;
	string system_program = 4;
	string event_authority = 5;
	string program = 6;
}


message FundRewardIxAccounts {
	string pool = 1;
	string reward_vault = 2;
	string reward_mint = 3;
	string funder_token_account = 4;
	string funder = 5;
	string token_program = 6;
	string event_authority = 7;
	string program = 8;
}

message FundRewardIxData {
	uint32 reward_index = 1;
	uint64 amount = 2;
	bool carry_forward = 3;
}

message InitializeCustomizablePoolIxAccounts {
	string creator = 1;
	string position_nft_mint = 2;
	string position_nft_account = 3;
	string payer = 4;
	string pool_authority = 5;
	string pool = 6;
	string position = 7;
	string token_a_mint = 8;
	string token_b_mint = 9;
	string token_a_vault = 10;
	string token_b_vault = 11;
	string payer_token_a = 12;
	string payer_token_b = 13;
	string token_a_program = 14;
	string token_b_program = 15;
	string token2022_program = 16;
	string system_program = 17;
	string event_authority = 18;
	string program = 19;
}

message InitializeCustomizablePoolIxData {
	InitializeCustomizablePoolParameters params = 1;
}

message InitializePoolIxAccounts {
	string creator = 1;
	string position_nft_mint = 2;
	string position_nft_account = 3;
	string payer = 4;
	string config = 5;
	string pool_authority = 6;
	string pool = 7;
	string position = 8;
	string token_a_mint = 9;
	string token_b_mint = 10;
	string token_a_vault = 11;
	string token_b_vault = 12;
	string payer_token_a = 13;
	string payer_token_b = 14;
	string token_a_program = 15;
	string token_b_program = 16;
	string token2022_program = 17;
	string system_program = 18;
	string event_authority = 19;
	string program = 20;
}

message InitializePoolIxData {
	string liquidity = 1;
	string sqrt_price = 2;
	optional uint64 activation_point = 3;
}

message InitializePoolWithDynamicConfigIxAccounts {
	string creator = 1;
	string position_nft_mint = 2;
	string position_nft_account = 3;
	string payer = 4;
	string pool_creator_authority = 5;
	string config = 6;
	string pool_authority = 7;
	string pool = 8;
	string position = 9;
	string token_a_mint = 10;
	string token_b_mint = 11;
	string token_a_vault = 12;
	string token_b_vault = 13;
	string payer_token_a = 14;
	string payer_token_b = 15;
	string token_a_program = 16;
	string token_b_program = 17;
	string token2022_program = 18;
	string system_program = 19;
	string event_authority = 20;
	string program = 21;
}

message InitializePoolWithDynamicConfigIxData {
	InitializeCustomizablePoolParameters params = 1;
}

message InitializeRewardIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string reward_vault = 3;
	string reward_mint = 4;
	string signer = 5;
	string payer = 6;
	string token_program = 7;
	string system_program = 8;
	string event_authority = 9;
	string program = 10;
}

message InitializeRewardIxData {
	uint32 reward_index = 1;
	uint64 reward_duration = 2;
	string funder = 3;
}

message LockPositionIxAccounts {
	string pool = 1;
	string position = 2;
	string vesting = 3;
	string position_nft_account = 4;
	string owner = 5;
	string payer = 6;
	string system_program = 7;
	string event_authority = 8;
	string program = 9;
}

message LockPositionIxData {
	optional uint64 cliff_point = 1;
	uint64 period_frequency = 2;
	string cliff_unlock_liquidity = 3;
	string liquidity_per_period = 4;
	uint32 number_of_period = 5;
}

message PermanentLockPositionIxAccounts {
	string pool = 1;
	string position = 2;
	string position_nft_account = 3;
	string owner = 4;
	string event_authority = 5;
	string program = 6;
}

message PermanentLockPositionIxData {
	string permanent_lock_liquidity = 1;
}

message RefreshVestingIxAccounts {
	string pool = 1;
	string position = 2;
	string position_nft_account = 3;
	string owner = 4;
}


message RemoveAllLiquidityIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string position = 3;
	string token_a_account = 4;
	string token_b_account = 5;
	string token_a_vault = 6;
	string token_b_vault = 7;
	string token_a_mint = 8;
	string token_b_mint = 9;
	string position_nft_account = 10;
	string owner = 11;
	string token_a_program = 12;
	string token_b_program = 13;
	string event_authority = 14;
	string program = 15;
}

message RemoveAllLiquidityIxData {
	uint64 token_a_amount_threshold = 1;
	uint64 token_b_amount_threshold = 2;
}

message RemoveLiquidityIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string position = 3;
	string token_a_account = 4;
	string token_b_account = 5;
	string token_a_vault = 6;
	string token_b_vault = 7;
	string token_a_mint = 8;
	string token_b_mint = 9;
	string position_nft_account = 10;
	string owner = 11;
	string token_a_program = 12;
	string token_b_program = 13;
	string event_authority = 14;
	string program = 15;
}

message RemoveLiquidityIxData {
	RemoveLiquidityParameters params = 1;
}

message SetPoolStatusIxAccounts {
	string pool = 1;
	string admin = 2;
	string event_authority = 3;
	string program = 4;
}

message SetPoolStatusIxData {
	uint32 status = 1;
}

message SplitPositionIxAccounts {
	string pool = 1;
	string first_position = 2;
	string first_position_nft_account = 3;
	string second_position = 4;
	string second_position_nft_account = 5;
	string first_owner = 6;
	string second_owner = 7;
	string event_authority = 8;
	string program = 9;
}

message SplitPositionIxData {
	uint32 unlocked_liquidity_percentage = 1;
	uint32 permanent_locked_liquidity_percentage = 2;
	uint32 fee_a_percentage = 3;
	uint32 fee_b_percentage = 4;
	uint32 reward0_percentage = 5;
	uint32 reward1_percentage = 6;
	repeated uint32 padding = 7;
}

message SplitPosition2IxAccounts {
	string pool = 1;
	string first_position = 2;
	string first_position_nft_account = 3;
	string second_position = 4;
	string second_position_nft_account = 5;
	string first_owner = 6;
	string second_owner = 7;
	string event_authority = 8;
	string program = 9;
}

message SplitPosition2IxData {
	uint32 numerator = 1;
}

message SwapIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string input_token_account = 3;
	string output_token_account = 4;
	string token_a_vault = 5;
	string token_b_vault = 6;
	string token_a_mint = 7;
	string token_b_mint = 8;
	string payer = 9;
	string token_a_program = 10;
	string token_b_program = 11;
	optional string referral_token_account = 12;
	string event_authority = 13;
	string program = 14;
}

message SwapIxData {
	SwapParameters params = 1;
}

message Swap2IxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string input_token_account = 3;
	string output_token_account = 4;
	string token_a_vault = 5;
	string token_b_vault = 6;
	string token_a_mint = 7;
	string token_b_mint = 8;
	string payer = 9;
	string token_a_program = 10;
	string token_b_program = 11;
	optional string referral_token_account = 12;
	string event_authority = 13;
	string program = 14;
}

message Swap2IxData {
	SwapParameters2 params = 1;
}

message UpdateRewardDurationIxAccounts {
	string pool = 1;
	string signer = 2;
	string event_authority = 3;
	string program = 4;
}

message UpdateRewardDurationIxData {
	uint32 reward_index = 1;
	uint64 new_duration = 2;
}

message UpdateRewardFunderIxAccounts {
	string pool = 1;
	string signer = 2;
	string event_authority = 3;
	string program = 4;
}

message UpdateRewardFunderIxData {
	uint32 reward_index = 1;
	string new_funder = 2;
}

message WithdrawIneligibleRewardIxAccounts {
	string pool_authority = 1;
	string pool = 2;
	string reward_vault = 3;
	string reward_mint = 4;
	string funder_token_account = 5;
	string funder = 6;
	string token_program = 7;
	string event_authority = 8;
	string program = 9;
}

message WithdrawIneligibleRewardIxData {
	uint32 reward_index = 1;
}


message ProgramState {
    oneof state_oneof {
        	ClaimFeeOperator claim_fee_operator = 1;
        	Config config = 2;
        	Pool pool = 3;
        	Position position = 4;
        	TokenBadge token_badge = 5;
        	Vesting vesting = 6;
        }
}

message ProgramIxs {
    oneof ix_oneof {
        	AddLiquidityIx add_liquidity = 1;
        	ClaimPartnerFeeIx claim_partner_fee = 2;
        	ClaimPositionFeeIx claim_position_fee = 3;
        	ClaimProtocolFeeIx claim_protocol_fee = 4;
        	ClaimRewardIx claim_reward = 5;
        	CloseClaimFeeOperatorIx close_claim_fee_operator = 6;
        	CloseConfigIx close_config = 7;
        	ClosePositionIx close_position = 8;
        	CloseTokenBadgeIx close_token_badge = 9;
        	CreateClaimFeeOperatorIx create_claim_fee_operator = 10;
        	CreateConfigIx create_config = 11;
        	CreateDynamicConfigIx create_dynamic_config = 12;
        	CreatePositionIx create_position = 13;
        	CreateTokenBadgeIx create_token_badge = 14;
        	FundRewardIx fund_reward = 15;
        	InitializeCustomizablePoolIx initialize_customizable_pool = 16;
        	InitializePoolIx initialize_pool = 17;
        	InitializePoolWithDynamicConfigIx initialize_pool_with_dynamic_config = 18;
        	InitializeRewardIx initialize_reward = 19;
        	LockPositionIx lock_position = 20;
        	PermanentLockPositionIx permanent_lock_position = 21;
        	RefreshVestingIx refresh_vesting = 22;
        	RemoveAllLiquidityIx remove_all_liquidity = 23;
        	RemoveLiquidityIx remove_liquidity = 24;
        	SetPoolStatusIx set_pool_status = 25;
        	SplitPositionIx split_position = 26;
        	SplitPosition2Ix split_position2 = 27;
        	SwapIx swap = 28;
        	Swap2Ix swap2 = 29;
        	UpdateRewardDurationIx update_reward_duration = 30;
        	UpdateRewardFunderIx update_reward_funder = 31;
        	WithdrawIneligibleRewardIx withdraw_ineligible_reward = 32;
        }
}

