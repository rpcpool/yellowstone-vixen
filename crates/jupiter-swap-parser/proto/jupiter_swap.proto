//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!
syntax = "proto3";

package vixen.parser.jupiter_swap;

message SwapSaber { }

message SwapSaberAddDecimalsDeposit { }

message SwapSaberAddDecimalsWithdraw { }

message SwapTokenSwap { }

message SwapSencha { }

message SwapStep { }

message SwapCropper { }

message SwapRaydium { }

message SwapCrema {
	bool a_to_b = 1;
}

message SwapLifinity { }

message SwapMercurial { }

message SwapCykura { }

message SwapSerum {
	Side side = 1;
}

message SwapMarinadeDeposit { }

message SwapMarinadeUnstake { }

message SwapAldrin {
	Side side = 1;
}

message SwapAldrinV2 {
	Side side = 1;
}

message SwapWhirlpool {
	bool a_to_b = 1;
}

message SwapInvariant {
	bool x_to_y = 1;
}

message SwapMeteora { }

message SwapGooseFX { }

message SwapDeltaFi {
	bool stable = 1;
}

message SwapBalansol { }

message SwapMarcoPolo {
	bool x_to_y = 1;
}

message SwapDradex {
	Side side = 1;
}

message SwapLifinityV2 { }

message SwapRaydiumClmm { }

message SwapOpenbook {
	Side side = 1;
}

message SwapPhoenix {
	Side side = 1;
}

message SwapSymmetry {
	uint64 from_token_id = 1;
	uint64 to_token_id = 2;
}

message SwapTokenSwapV2 { }

message SwapHeliumTreasuryManagementRedeemV0 { }

message SwapStakeDexStakeWrappedSol { }

message SwapStakeDexSwapViaStake {
	uint32 bridge_stake_seed = 1;
}

message SwapGooseFXV2 { }

message SwapPerps { }

message SwapPerpsAddLiquidity { }

message SwapPerpsRemoveLiquidity { }

message SwapMeteoraDlmm { }

message SwapOpenBookV2 {
	Side side = 1;
}

message SwapRaydiumClmmV2 { }

message SwapStakeDexPrefundWithdrawStakeAndDepositStake {
	uint32 bridge_stake_seed = 1;
}

message SwapClone {
	uint32 pool_index = 1;
	bool quantity_is_input = 2;
	bool quantity_is_collateral = 3;
}

message SwapSanctumS {
	uint32 src_lst_value_calc_accs = 1;
	uint32 dst_lst_value_calc_accs = 2;
	uint32 src_lst_index = 3;
	uint32 dst_lst_index = 4;
}

message SwapSanctumSAddLiquidity {
	uint32 lst_value_calc_accs = 1;
	uint32 lst_index = 2;
}

message SwapSanctumSRemoveLiquidity {
	uint32 lst_value_calc_accs = 1;
	uint32 lst_index = 2;
}

message SwapRaydiumCP { }

message SwapWhirlpoolSwapV2 {
	bool a_to_b = 1;
	optional RemainingAccountsInfo remaining_accounts_info = 2;
}

message SwapOneIntro { }

message SwapPumpdotfunWrappedBuy { }

message SwapPumpdotfunWrappedSell { }

message SwapPerpsV2 { }

message SwapPerpsV2AddLiquidity { }

message SwapPerpsV2RemoveLiquidity { }

message SwapMoonshotWrappedBuy { }

message SwapMoonshotWrappedSell { }

message SwapStabbleStableSwap { }

message SwapStabbleWeightedSwap { }

message SwapObric {
	bool x_to_y = 1;
}

message SwapFoxBuyFromEstimatedCost { }

message SwapFoxClaimPartial {
	bool is_y = 1;
}

message SwapSolFi {
	bool is_quote_to_base = 1;
}

message SwapSolayerDelegateNoInit { }

message SwapSolayerUndelegateNoInit { }

message SwapTokenMill {
	Side side = 1;
}

message SwapDaosFunBuy { }

message SwapDaosFunSell { }

message SwapZeroFi { }

message SwapStakeDexWithdrawWrappedSol { }

message SwapVirtualsBuy { }

message SwapVirtualsSell { }

message SwapPerena {
	uint32 in_index = 1;
	uint32 out_index = 2;
}

message SwapPumpdotfunAmmBuy { }

message SwapPumpdotfunAmmSell { }

message SwapGamma { }

message ClaimIx {
	ClaimIxAccounts accounts = 1;
	ClaimIxData data = 2;
}

message ClaimTokenIx {
	ClaimTokenIxAccounts accounts = 1;
	ClaimTokenIxData data = 2;
}

message CloseTokenIx {
	CloseTokenIxAccounts accounts = 1;
	CloseTokenIxData data = 2;
}

message CreateOpenOrdersIx {
	CreateOpenOrdersIxAccounts accounts = 1;
}

message CreateProgramOpenOrdersIx {
	CreateProgramOpenOrdersIxAccounts accounts = 1;
	CreateProgramOpenOrdersIxData data = 2;
}

message CreateTokenLedgerIx {
	CreateTokenLedgerIxAccounts accounts = 1;
}

message CreateTokenAccountIx {
	CreateTokenAccountIxAccounts accounts = 1;
	CreateTokenAccountIxData data = 2;
}

message ExactOutRouteIx {
	ExactOutRouteIxAccounts accounts = 1;
	ExactOutRouteIxData data = 2;
}

message RouteIx {
	RouteIxAccounts accounts = 1;
	RouteIxData data = 2;
}

message RouteWithTokenLedgerIx {
	RouteWithTokenLedgerIxAccounts accounts = 1;
	RouteWithTokenLedgerIxData data = 2;
}

message SetTokenLedgerIx {
	SetTokenLedgerIxAccounts accounts = 1;
}

message SharedAccountsExactOutRouteIx {
	SharedAccountsExactOutRouteIxAccounts accounts = 1;
	SharedAccountsExactOutRouteIxData data = 2;
}

message SharedAccountsRouteIx {
	SharedAccountsRouteIxAccounts accounts = 1;
	SharedAccountsRouteIxData data = 2;
}

message SharedAccountsRouteWithTokenLedgerIx {
	SharedAccountsRouteWithTokenLedgerIxAccounts accounts = 1;
	SharedAccountsRouteWithTokenLedgerIxData data = 2;
}


enum AccountsType {
	AccountsTypeTransferHookA = 0;
	AccountsTypeTransferHookB = 1;
	AccountsTypeTransferHookReward = 2;
	AccountsTypeTransferHookInput = 3;
	AccountsTypeTransferHookIntermediate = 4;
	AccountsTypeTransferHookOutput = 5;
	AccountsTypeSupplementalTickArrays = 6;
	AccountsTypeSupplementalTickArraysOne = 7;
	AccountsTypeSupplementalTickArraysTwo = 8;
}

message FeeEvent {
	string account = 1;
	string mint = 2;
	uint64 amount = 3;
}

message RemainingAccountsInfo {
	repeated RemainingAccountsSlice slices = 1;
}

message RemainingAccountsSlice {
	AccountsType accounts_type = 1;
	uint32 length = 2;
}

message RoutePlanStep {
	Swap swap = 1;
	uint32 percent = 2;
	uint32 input_index = 3;
	uint32 output_index = 4;
}

enum Side {
	SideBid = 0;
	SideAsk = 1;
}

message Swap {
	oneof variant{
		SwapSaber saber = 1;
		SwapSaberAddDecimalsDeposit saber_add_decimals_deposit = 2;
		SwapSaberAddDecimalsWithdraw saber_add_decimals_withdraw = 3;
		SwapTokenSwap token_swap = 4;
		SwapSencha sencha = 5;
		SwapStep step = 6;
		SwapCropper cropper = 7;
		SwapRaydium raydium = 8;
		SwapCrema crema = 9;
		SwapLifinity lifinity = 10;
		SwapMercurial mercurial = 11;
		SwapCykura cykura = 12;
		SwapSerum serum = 13;
		SwapMarinadeDeposit marinade_deposit = 14;
		SwapMarinadeUnstake marinade_unstake = 15;
		SwapAldrin aldrin = 16;
		SwapAldrinV2 aldrin_v2 = 17;
		SwapWhirlpool whirlpool = 18;
		SwapInvariant invariant = 19;
		SwapMeteora meteora = 20;
		SwapGooseFX goose_f_x = 21;
		SwapDeltaFi delta_fi = 22;
		SwapBalansol balansol = 23;
		SwapMarcoPolo marco_polo = 24;
		SwapDradex dradex = 25;
		SwapLifinityV2 lifinity_v2 = 26;
		SwapRaydiumClmm raydium_clmm = 27;
		SwapOpenbook openbook = 28;
		SwapPhoenix phoenix = 29;
		SwapSymmetry symmetry = 30;
		SwapTokenSwapV2 token_swap_v2 = 31;
		SwapHeliumTreasuryManagementRedeemV0 helium_treasury_management_redeem_v0 = 32;
		SwapStakeDexStakeWrappedSol stake_dex_stake_wrapped_sol = 33;
		SwapStakeDexSwapViaStake stake_dex_swap_via_stake = 34;
		SwapGooseFXV2 goose_f_x_v2 = 35;
		SwapPerps perps = 36;
		SwapPerpsAddLiquidity perps_add_liquidity = 37;
		SwapPerpsRemoveLiquidity perps_remove_liquidity = 38;
		SwapMeteoraDlmm meteora_dlmm = 39;
		SwapOpenBookV2 open_book_v2 = 40;
		SwapRaydiumClmmV2 raydium_clmm_v2 = 41;
		SwapStakeDexPrefundWithdrawStakeAndDepositStake stake_dex_prefund_withdraw_stake_and_deposit_stake = 42;
		SwapClone clone = 43;
		SwapSanctumS sanctum_s = 44;
		SwapSanctumSAddLiquidity sanctum_s_add_liquidity = 45;
		SwapSanctumSRemoveLiquidity sanctum_s_remove_liquidity = 46;
		SwapRaydiumCP raydium_c_p = 47;
		SwapWhirlpoolSwapV2 whirlpool_swap_v2 = 48;
		SwapOneIntro one_intro = 49;
		SwapPumpdotfunWrappedBuy pumpdotfun_wrapped_buy = 50;
		SwapPumpdotfunWrappedSell pumpdotfun_wrapped_sell = 51;
		SwapPerpsV2 perps_v2 = 52;
		SwapPerpsV2AddLiquidity perps_v2_add_liquidity = 53;
		SwapPerpsV2RemoveLiquidity perps_v2_remove_liquidity = 54;
		SwapMoonshotWrappedBuy moonshot_wrapped_buy = 55;
		SwapMoonshotWrappedSell moonshot_wrapped_sell = 56;
		SwapStabbleStableSwap stabble_stable_swap = 57;
		SwapStabbleWeightedSwap stabble_weighted_swap = 58;
		SwapObric obric = 59;
		SwapFoxBuyFromEstimatedCost fox_buy_from_estimated_cost = 60;
		SwapFoxClaimPartial fox_claim_partial = 61;
		SwapSolFi sol_fi = 62;
		SwapSolayerDelegateNoInit solayer_delegate_no_init = 63;
		SwapSolayerUndelegateNoInit solayer_undelegate_no_init = 64;
		SwapTokenMill token_mill = 65;
		SwapDaosFunBuy daos_fun_buy = 66;
		SwapDaosFunSell daos_fun_sell = 67;
		SwapZeroFi zero_fi = 68;
		SwapStakeDexWithdrawWrappedSol stake_dex_withdraw_wrapped_sol = 69;
		SwapVirtualsBuy virtuals_buy = 70;
		SwapVirtualsSell virtuals_sell = 71;
		SwapPerena perena = 72;
		SwapPumpdotfunAmmBuy pumpdotfun_amm_buy = 73;
		SwapPumpdotfunAmmSell pumpdotfun_amm_sell = 74;
		SwapGamma gamma = 75;
	}
}

message SwapEvent {
	string amm = 1;
	string input_mint = 2;
	uint64 input_amount = 3;
	string output_mint = 4;
	uint64 output_amount = 5;
}


message TokenLedger {
	string token_account = 1;
	uint64 amount = 2;
}


message ClaimIxAccounts {
	string wallet = 1;
	string program_authority = 2;
	string system_program = 3;
}

message ClaimIxData {
	uint32 id = 1;
}

message ClaimTokenIxAccounts {
	string payer = 1;
	string wallet = 2;
	string program_authority = 3;
	string program_token_account = 4;
	string destination_token_account = 5;
	string mint = 6;
	string token_program = 7;
	string associated_token_program = 8;
	string system_program = 9;
}

message ClaimTokenIxData {
	uint32 id = 1;
}

message CloseTokenIxAccounts {
	string operator = 1;
	string wallet = 2;
	string program_authority = 3;
	string program_token_account = 4;
	string mint = 5;
	string token_program = 6;
}

message CloseTokenIxData {
	uint32 id = 1;
	bool burn_all = 2;
}

message CreateOpenOrdersIxAccounts {
	string open_orders = 1;
	string payer = 2;
	string dex_program = 3;
	string system_program = 4;
	string rent = 5;
	string market = 6;
}


message CreateProgramOpenOrdersIxAccounts {
	string open_orders = 1;
	string payer = 2;
	string program_authority = 3;
	string dex_program = 4;
	string system_program = 5;
	string rent = 6;
	string market = 7;
}

message CreateProgramOpenOrdersIxData {
	uint32 id = 1;
}

message CreateTokenLedgerIxAccounts {
	string token_ledger = 1;
	string payer = 2;
	string system_program = 3;
}


message CreateTokenAccountIxAccounts {
	string token_account = 1;
	string user = 2;
	string mint = 3;
	string token_program = 4;
	string system_program = 5;
}

message CreateTokenAccountIxData {
	uint32 bump = 1;
}

message ExactOutRouteIxAccounts {
	string token_program = 1;
	string user_transfer_authority = 2;
	string user_source_token_account = 3;
	string user_destination_token_account = 4;
	optional string destination_token_account = 5;
	string source_mint = 6;
	string destination_mint = 7;
	optional string platform_fee_account = 8;
	optional string token2022_program = 9;
	string event_authority = 10;
	string program = 11;
}

message ExactOutRouteIxData {
	repeated RoutePlanStep route_plan = 1;
	uint64 out_amount = 2;
	uint64 quoted_in_amount = 3;
	uint32 slippage_bps = 4;
	uint32 platform_fee_bps = 5;
}

message RouteIxAccounts {
	string token_program = 1;
	string user_transfer_authority = 2;
	string user_source_token_account = 3;
	string user_destination_token_account = 4;
	optional string destination_token_account = 5;
	string destination_mint = 6;
	optional string platform_fee_account = 7;
	string event_authority = 8;
	string program = 9;
}

message RouteIxData {
	repeated RoutePlanStep route_plan = 1;
	uint64 in_amount = 2;
	uint64 quoted_out_amount = 3;
	uint32 slippage_bps = 4;
	uint32 platform_fee_bps = 5;
}

message RouteWithTokenLedgerIxAccounts {
	string token_program = 1;
	string user_transfer_authority = 2;
	string user_source_token_account = 3;
	string user_destination_token_account = 4;
	optional string destination_token_account = 5;
	string destination_mint = 6;
	optional string platform_fee_account = 7;
	string token_ledger = 8;
	string event_authority = 9;
	string program = 10;
}

message RouteWithTokenLedgerIxData {
	repeated RoutePlanStep route_plan = 1;
	uint64 quoted_out_amount = 2;
	uint32 slippage_bps = 3;
	uint32 platform_fee_bps = 4;
}

message SetTokenLedgerIxAccounts {
	string token_ledger = 1;
	string token_account = 2;
}


message SharedAccountsExactOutRouteIxAccounts {
	string token_program = 1;
	string program_authority = 2;
	string user_transfer_authority = 3;
	string source_token_account = 4;
	string program_source_token_account = 5;
	string program_destination_token_account = 6;
	string destination_token_account = 7;
	string source_mint = 8;
	string destination_mint = 9;
	optional string platform_fee_account = 10;
	optional string token2022_program = 11;
	string event_authority = 12;
	string program = 13;
}

message SharedAccountsExactOutRouteIxData {
	uint32 id = 1;
	repeated RoutePlanStep route_plan = 2;
	uint64 out_amount = 3;
	uint64 quoted_in_amount = 4;
	uint32 slippage_bps = 5;
	uint32 platform_fee_bps = 6;
}

message SharedAccountsRouteIxAccounts {
	string token_program = 1;
	string program_authority = 2;
	string user_transfer_authority = 3;
	string source_token_account = 4;
	string program_source_token_account = 5;
	string program_destination_token_account = 6;
	string destination_token_account = 7;
	string source_mint = 8;
	string destination_mint = 9;
	optional string platform_fee_account = 10;
	optional string token2022_program = 11;
	string event_authority = 12;
	string program = 13;
}

message SharedAccountsRouteIxData {
	uint32 id = 1;
	repeated RoutePlanStep route_plan = 2;
	uint64 in_amount = 3;
	uint64 quoted_out_amount = 4;
	uint32 slippage_bps = 5;
	uint32 platform_fee_bps = 6;
}

message SharedAccountsRouteWithTokenLedgerIxAccounts {
	string token_program = 1;
	string program_authority = 2;
	string user_transfer_authority = 3;
	string source_token_account = 4;
	string program_source_token_account = 5;
	string program_destination_token_account = 6;
	string destination_token_account = 7;
	string source_mint = 8;
	string destination_mint = 9;
	optional string platform_fee_account = 10;
	optional string token2022_program = 11;
	string token_ledger = 12;
	string event_authority = 13;
	string program = 14;
}

message SharedAccountsRouteWithTokenLedgerIxData {
	uint32 id = 1;
	repeated RoutePlanStep route_plan = 2;
	uint64 quoted_out_amount = 3;
	uint32 slippage_bps = 4;
	uint32 platform_fee_bps = 5;
}


message ProgramState {
    oneof state_oneof {
        	TokenLedger token_ledger = 1;
        }
}

message ProgramIxs {
    oneof ix_oneof {
        	ClaimIx claim = 1;
        	ClaimTokenIx claim_token = 2;
        	CloseTokenIx close_token = 3;
        	CreateOpenOrdersIx create_open_orders = 4;
        	CreateProgramOpenOrdersIx create_program_open_orders = 5;
        	CreateTokenLedgerIx create_token_ledger = 6;
        	CreateTokenAccountIx create_token_account = 7;
        	ExactOutRouteIx exact_out_route = 8;
        	RouteIx route = 9;
        	RouteWithTokenLedgerIx route_with_token_ledger = 10;
        	SetTokenLedgerIx set_token_ledger = 11;
        	SharedAccountsExactOutRouteIx shared_accounts_exact_out_route = 12;
        	SharedAccountsRouteIx shared_accounts_route = 13;
        	SharedAccountsRouteWithTokenLedgerIx shared_accounts_route_with_token_ledger = 14;
        }
}

