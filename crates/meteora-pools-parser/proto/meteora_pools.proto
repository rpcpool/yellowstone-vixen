//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!
syntax = "proto3";

package vixen.parser.meteora_pools;

message NewCurveTypeConstantProduct { }

message NewCurveTypeStable {
	uint64 amp = 1;
	TokenMultiplier token_multiplier = 2;
	Depeg depeg = 3;
	uint64 last_amp_updated_timestamp = 4;
}

message NewCurveTypeNewCurve {
	uint64 field_one = 1;
	uint64 field_two = 2;
}

message CurveTypeConstantProduct { }

message CurveTypeStable {
	uint64 amp = 1;
	TokenMultiplier token_multiplier = 2;
	Depeg depeg = 3;
	uint64 last_amp_updated_timestamp = 4;
}

message InitializePermissionedPoolIx {
	InitializePermissionedPoolIxAccounts accounts = 1;
	InitializePermissionedPoolIxData data = 2;
}

message InitializePermissionlessPoolIx {
	InitializePermissionlessPoolIxAccounts accounts = 1;
	InitializePermissionlessPoolIxData data = 2;
}

message InitializePermissionlessPoolWithFeeTierIx {
	InitializePermissionlessPoolWithFeeTierIxAccounts accounts = 1;
	InitializePermissionlessPoolWithFeeTierIxData data = 2;
}

message EnableOrDisablePoolIx {
	EnableOrDisablePoolIxAccounts accounts = 1;
	EnableOrDisablePoolIxData data = 2;
}

message SwapIx {
	SwapIxAccounts accounts = 1;
	SwapIxData data = 2;
}

message RemoveLiquiditySingleSideIx {
	RemoveLiquiditySingleSideIxAccounts accounts = 1;
	RemoveLiquiditySingleSideIxData data = 2;
}

message AddImbalanceLiquidityIx {
	AddImbalanceLiquidityIxAccounts accounts = 1;
	AddImbalanceLiquidityIxData data = 2;
}

message RemoveBalanceLiquidityIx {
	RemoveBalanceLiquidityIxAccounts accounts = 1;
	RemoveBalanceLiquidityIxData data = 2;
}

message AddBalanceLiquidityIx {
	AddBalanceLiquidityIxAccounts accounts = 1;
	AddBalanceLiquidityIxData data = 2;
}

message SetPoolFeesIx {
	SetPoolFeesIxAccounts accounts = 1;
	SetPoolFeesIxData data = 2;
}

message OverrideCurveParamIx {
	OverrideCurveParamIxAccounts accounts = 1;
	OverrideCurveParamIxData data = 2;
}

message GetPoolInfoIx {
	GetPoolInfoIxAccounts accounts = 1;
}

message BootstrapLiquidityIx {
	BootstrapLiquidityIxAccounts accounts = 1;
	BootstrapLiquidityIxData data = 2;
}

message CreateMintMetadataIx {
	CreateMintMetadataIxAccounts accounts = 1;
}

message CreateLockEscrowIx {
	CreateLockEscrowIxAccounts accounts = 1;
}

message LockIx {
	LockIxAccounts accounts = 1;
	LockIxData data = 2;
}

message ClaimFeeIx {
	ClaimFeeIxAccounts accounts = 1;
	ClaimFeeIxData data = 2;
}

message CreateConfigIx {
	CreateConfigIxAccounts accounts = 1;
	CreateConfigIxData data = 2;
}

message CloseConfigIx {
	CloseConfigIxAccounts accounts = 1;
}

message InitializePermissionlessConstantProductPoolWithConfigIx {
	InitializePermissionlessConstantProductPoolWithConfigIxAccounts accounts = 1;
	InitializePermissionlessConstantProductPoolWithConfigIxData data = 2;
}

message InitializePermissionlessConstantProductPoolWithConfig2Ix {
	InitializePermissionlessConstantProductPoolWithConfig2IxAccounts accounts = 1;
	InitializePermissionlessConstantProductPoolWithConfig2IxData data = 2;
}

message InitializeCustomizablePermissionlessConstantProductPoolIx {
	InitializeCustomizablePermissionlessConstantProductPoolIxAccounts accounts = 1;
	InitializeCustomizablePermissionlessConstantProductPoolIxData data = 2;
}

message UpdateActivationPointIx {
	UpdateActivationPointIxAccounts accounts = 1;
	UpdateActivationPointIxData data = 2;
}

message WithdrawProtocolFeesIx {
	WithdrawProtocolFeesIxAccounts accounts = 1;
}

message SetWhitelistedVaultIx {
	SetWhitelistedVaultIxAccounts accounts = 1;
	SetWhitelistedVaultIxData data = 2;
}

message PartnerClaimFeeIx {
	PartnerClaimFeeIxAccounts accounts = 1;
	PartnerClaimFeeIxData data = 2;
}


message TokenMultiplier {
	uint64 token_a_multiplier = 1;
	uint64 token_b_multiplier = 2;
	uint32 precision_factor = 3;
}

message PoolFees {
	uint64 trade_fee_numerator = 1;
	uint64 trade_fee_denominator = 2;
	uint64 protocol_trade_fee_numerator = 3;
	uint64 protocol_trade_fee_denominator = 4;
}

message Depeg {
	uint64 base_virtual_price = 1;
	uint64 base_cache_updated = 2;
	DepegType depeg_type = 3;
}

message Padding {
	repeated uint32 padding0 = 1;
	repeated uint64 padding1 = 2;
	repeated uint64 padding2 = 3;
}

message PartnerInfo {
	uint64 fee_numerator = 1;
	string partner_authority = 2;
	uint64 pending_fee_a = 3;
	uint64 pending_fee_b = 4;
}

message Bootstrapping {
	uint64 activation_point = 1;
	string whitelisted_vault = 2;
	string pool_creator = 3;
	uint32 activation_type = 4;
}

enum ActivationType {
	ActivationTypeSlot = 0;
	ActivationTypeTimestamp = 1;
}

enum RoundDirection {
	RoundDirectionFloor = 0;
	RoundDirectionCeiling = 1;
}

enum TradeDirection {
	TradeDirectionAtoB = 0;
	TradeDirectionBtoA = 1;
}

message NewCurveType {
	oneof variant{
		NewCurveTypeConstantProduct constant_product = 1;
		NewCurveTypeStable stable = 2;
		NewCurveTypeNewCurve new_curve = 3;
	}
}

message CurveType {
	oneof variant{
		CurveTypeConstantProduct constant_product = 1;
		CurveTypeStable stable = 2;
	}
}

enum DepegType {
	DepegTypeNone = 0;
	DepegTypeMarinade = 1;
	DepegTypeLido = 2;
	DepegTypeSplStake = 3;
}

enum Rounding {
	RoundingUp = 0;
	RoundingDown = 1;
}

enum PoolType {
	PoolTypePermissioned = 0;
	PoolTypePermissionless = 1;
}


message Config {
	PoolFees pool_fees = 1;
	uint64 activation_duration = 2;
	string vault_config_key = 3;
	string pool_creator_authority = 4;
	uint32 activation_type = 5;
	uint64 partner_fee_numerator = 6;
	repeated uint32 padding = 7;
}

message LockEscrow {
	string pool = 1;
	string owner = 2;
	string escrow_vault = 3;
	uint32 bump = 4;
	uint64 total_locked_amount = 5;
	string lp_per_token = 6;
	uint64 unclaimed_fee_pending = 7;
	uint64 a_fee = 8;
	uint64 b_fee = 9;
}

message Pool {
	string lp_mint = 1;
	string token_a_mint = 2;
	string token_b_mint = 3;
	string a_vault = 4;
	string b_vault = 5;
	string a_vault_lp = 6;
	string b_vault_lp = 7;
	uint32 a_vault_lp_bump = 8;
	bool enabled = 9;
	string protocol_token_a_fee = 10;
	string protocol_token_b_fee = 11;
	uint64 fee_last_updated_at = 12;
	repeated uint32 padding0 = 13;
	PoolFees fees = 14;
	PoolType pool_type = 15;
	string stake = 16;
	uint64 total_locked_lp = 17;
	Bootstrapping bootstrapping = 18;
	PartnerInfo partner_info = 19;
	Padding padding = 20;
	CurveType curve_type = 21;
}


message InitializePermissionedPoolIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string token_a_mint = 3;
	string token_b_mint = 4;
	string a_vault = 5;
	string b_vault = 6;
	string a_vault_lp_mint = 7;
	string b_vault_lp_mint = 8;
	string a_vault_lp = 9;
	string b_vault_lp = 10;
	string admin_token_a = 11;
	string admin_token_b = 12;
	string admin_pool_lp = 13;
	string protocol_token_a_fee = 14;
	string protocol_token_b_fee = 15;
	string admin = 16;
	string fee_owner = 17;
	string rent = 18;
	string mint_metadata = 19;
	string metadata_program = 20;
	string vault_program = 21;
	string token_program = 22;
	string associated_token_program = 23;
	string system_program = 24;
}

message InitializePermissionedPoolIxData {
	CurveType curve_type = 1;
}

message InitializePermissionlessPoolIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string token_a_mint = 3;
	string token_b_mint = 4;
	string a_vault = 5;
	string b_vault = 6;
	string a_token_vault = 7;
	string b_token_vault = 8;
	string a_vault_lp_mint = 9;
	string b_vault_lp_mint = 10;
	string a_vault_lp = 11;
	string b_vault_lp = 12;
	string payer_token_a = 13;
	string payer_token_b = 14;
	string payer_pool_lp = 15;
	string protocol_token_a_fee = 16;
	string protocol_token_b_fee = 17;
	string payer = 18;
	string fee_owner = 19;
	string rent = 20;
	string mint_metadata = 21;
	string metadata_program = 22;
	string vault_program = 23;
	string token_program = 24;
	string associated_token_program = 25;
	string system_program = 26;
}

message InitializePermissionlessPoolIxData {
	CurveType curve_type = 1;
	uint64 token_a_amount = 2;
	uint64 token_b_amount = 3;
}

message InitializePermissionlessPoolWithFeeTierIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string token_a_mint = 3;
	string token_b_mint = 4;
	string a_vault = 5;
	string b_vault = 6;
	string a_token_vault = 7;
	string b_token_vault = 8;
	string a_vault_lp_mint = 9;
	string b_vault_lp_mint = 10;
	string a_vault_lp = 11;
	string b_vault_lp = 12;
	string payer_token_a = 13;
	string payer_token_b = 14;
	string payer_pool_lp = 15;
	string protocol_token_a_fee = 16;
	string protocol_token_b_fee = 17;
	string payer = 18;
	string fee_owner = 19;
	string rent = 20;
	string mint_metadata = 21;
	string metadata_program = 22;
	string vault_program = 23;
	string token_program = 24;
	string associated_token_program = 25;
	string system_program = 26;
}

message InitializePermissionlessPoolWithFeeTierIxData {
	CurveType curve_type = 1;
	uint64 trade_fee_bps = 2;
	uint64 token_a_amount = 3;
	uint64 token_b_amount = 4;
}

message EnableOrDisablePoolIxAccounts {
	string pool = 1;
	string admin = 2;
}

message EnableOrDisablePoolIxData {
	bool enable = 1;
}

message SwapIxAccounts {
	string pool = 1;
	string user_source_token = 2;
	string user_destination_token = 3;
	string a_vault = 4;
	string b_vault = 5;
	string a_token_vault = 6;
	string b_token_vault = 7;
	string a_vault_lp_mint = 8;
	string b_vault_lp_mint = 9;
	string a_vault_lp = 10;
	string b_vault_lp = 11;
	string protocol_token_fee = 12;
	string user = 13;
	string vault_program = 14;
	string token_program = 15;
}

message SwapIxData {
	uint64 in_amount = 1;
	uint64 minimum_out_amount = 2;
}

message RemoveLiquiditySingleSideIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string user_pool_lp = 3;
	string a_vault_lp = 4;
	string b_vault_lp = 5;
	string a_vault = 6;
	string b_vault = 7;
	string a_vault_lp_mint = 8;
	string b_vault_lp_mint = 9;
	string a_token_vault = 10;
	string b_token_vault = 11;
	string user_destination_token = 12;
	string user = 13;
	string vault_program = 14;
	string token_program = 15;
}

message RemoveLiquiditySingleSideIxData {
	uint64 pool_token_amount = 1;
	uint64 minimum_out_amount = 2;
}

message AddImbalanceLiquidityIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string user_pool_lp = 3;
	string a_vault_lp = 4;
	string b_vault_lp = 5;
	string a_vault = 6;
	string b_vault = 7;
	string a_vault_lp_mint = 8;
	string b_vault_lp_mint = 9;
	string a_token_vault = 10;
	string b_token_vault = 11;
	string user_a_token = 12;
	string user_b_token = 13;
	string user = 14;
	string vault_program = 15;
	string token_program = 16;
}

message AddImbalanceLiquidityIxData {
	uint64 minimum_pool_token_amount = 1;
	uint64 token_a_amount = 2;
	uint64 token_b_amount = 3;
}

message RemoveBalanceLiquidityIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string user_pool_lp = 3;
	string a_vault_lp = 4;
	string b_vault_lp = 5;
	string a_vault = 6;
	string b_vault = 7;
	string a_vault_lp_mint = 8;
	string b_vault_lp_mint = 9;
	string a_token_vault = 10;
	string b_token_vault = 11;
	string user_a_token = 12;
	string user_b_token = 13;
	string user = 14;
	string vault_program = 15;
	string token_program = 16;
}

message RemoveBalanceLiquidityIxData {
	uint64 pool_token_amount = 1;
	uint64 minimum_a_token_out = 2;
	uint64 minimum_b_token_out = 3;
}

message AddBalanceLiquidityIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string user_pool_lp = 3;
	string a_vault_lp = 4;
	string b_vault_lp = 5;
	string a_vault = 6;
	string b_vault = 7;
	string a_vault_lp_mint = 8;
	string b_vault_lp_mint = 9;
	string a_token_vault = 10;
	string b_token_vault = 11;
	string user_a_token = 12;
	string user_b_token = 13;
	string user = 14;
	string vault_program = 15;
	string token_program = 16;
}

message AddBalanceLiquidityIxData {
	uint64 pool_token_amount = 1;
	uint64 maximum_token_a_amount = 2;
	uint64 maximum_token_b_amount = 3;
}

message SetPoolFeesIxAccounts {
	string pool = 1;
	string fee_operator = 2;
}

message SetPoolFeesIxData {
	PoolFees fees = 1;
	uint64 new_partner_fee_numerator = 2;
}

message OverrideCurveParamIxAccounts {
	string pool = 1;
	string admin = 2;
}

message OverrideCurveParamIxData {
	CurveType curve_type = 1;
}

message GetPoolInfoIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string a_vault_lp = 3;
	string b_vault_lp = 4;
	string a_vault = 5;
	string b_vault = 6;
	string a_vault_lp_mint = 7;
	string b_vault_lp_mint = 8;
}


message BootstrapLiquidityIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string user_pool_lp = 3;
	string a_vault_lp = 4;
	string b_vault_lp = 5;
	string a_vault = 6;
	string b_vault = 7;
	string a_vault_lp_mint = 8;
	string b_vault_lp_mint = 9;
	string a_token_vault = 10;
	string b_token_vault = 11;
	string user_a_token = 12;
	string user_b_token = 13;
	string user = 14;
	string vault_program = 15;
	string token_program = 16;
}

message BootstrapLiquidityIxData {
	uint64 token_a_amount = 1;
	uint64 token_b_amount = 2;
}

message CreateMintMetadataIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string a_vault_lp = 3;
	string mint_metadata = 4;
	string metadata_program = 5;
	string system_program = 6;
	string payer = 7;
}


message CreateLockEscrowIxAccounts {
	string pool = 1;
	string lock_escrow = 2;
	string owner = 3;
	string lp_mint = 4;
	string payer = 5;
	string system_program = 6;
}


message LockIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string lock_escrow = 3;
	string owner = 4;
	string source_tokens = 5;
	string escrow_vault = 6;
	string token_program = 7;
	string a_vault = 8;
	string b_vault = 9;
	string a_vault_lp = 10;
	string b_vault_lp = 11;
	string a_vault_lp_mint = 12;
	string b_vault_lp_mint = 13;
}

message LockIxData {
	uint64 max_amount = 1;
}

message ClaimFeeIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string lock_escrow = 3;
	string owner = 4;
	string source_tokens = 5;
	string escrow_vault = 6;
	string token_program = 7;
	string a_token_vault = 8;
	string b_token_vault = 9;
	string a_vault = 10;
	string b_vault = 11;
	string a_vault_lp = 12;
	string b_vault_lp = 13;
	string a_vault_lp_mint = 14;
	string b_vault_lp_mint = 15;
	string user_a_token = 16;
	string user_b_token = 17;
	string vault_program = 18;
}

message ClaimFeeIxData {
	uint64 max_amount = 1;
}

message CreateConfigIxAccounts {
	string config = 1;
	string admin = 2;
	string system_program = 3;
}

message CreateConfigIxData {
	uint64 trade_fee_numerator = 1;
	uint64 protocol_trade_fee_numerator = 2;
	uint64 activation_duration = 3;
	string vault_config_key = 4;
	string pool_creator_authority = 5;
	uint32 activation_type = 6;
	uint64 index = 7;
	uint64 partner_fee_numerator = 8;
}

message CloseConfigIxAccounts {
	string config = 1;
	string admin = 2;
	string rent_receiver = 3;
}


message InitializePermissionlessConstantProductPoolWithConfigIxAccounts {
	string pool = 1;
	string config = 2;
	string lp_mint = 3;
	string token_a_mint = 4;
	string token_b_mint = 5;
	string a_vault = 6;
	string b_vault = 7;
	string a_token_vault = 8;
	string b_token_vault = 9;
	string a_vault_lp_mint = 10;
	string b_vault_lp_mint = 11;
	string a_vault_lp = 12;
	string b_vault_lp = 13;
	string payer_token_a = 14;
	string payer_token_b = 15;
	string payer_pool_lp = 16;
	string protocol_token_a_fee = 17;
	string protocol_token_b_fee = 18;
	string payer = 19;
	string rent = 20;
	string mint_metadata = 21;
	string metadata_program = 22;
	string vault_program = 23;
	string token_program = 24;
	string associated_token_program = 25;
	string system_program = 26;
}

message InitializePermissionlessConstantProductPoolWithConfigIxData {
	uint64 token_a_amount = 1;
	uint64 token_b_amount = 2;
}

message InitializePermissionlessConstantProductPoolWithConfig2IxAccounts {
	string pool = 1;
	string config = 2;
	string lp_mint = 3;
	string token_a_mint = 4;
	string token_b_mint = 5;
	string a_vault = 6;
	string b_vault = 7;
	string a_token_vault = 8;
	string b_token_vault = 9;
	string a_vault_lp_mint = 10;
	string b_vault_lp_mint = 11;
	string a_vault_lp = 12;
	string b_vault_lp = 13;
	string payer_token_a = 14;
	string payer_token_b = 15;
	string payer_pool_lp = 16;
	string protocol_token_a_fee = 17;
	string protocol_token_b_fee = 18;
	string payer = 19;
	string rent = 20;
	string mint_metadata = 21;
	string metadata_program = 22;
	string vault_program = 23;
	string token_program = 24;
	string associated_token_program = 25;
	string system_program = 26;
}

message InitializePermissionlessConstantProductPoolWithConfig2IxData {
	uint64 token_a_amount = 1;
	uint64 token_b_amount = 2;
	optional uint64 activation_point = 3;
}

message InitializeCustomizablePermissionlessConstantProductPoolIxAccounts {
	string pool = 1;
	string lp_mint = 2;
	string token_a_mint = 3;
	string token_b_mint = 4;
	string a_vault = 5;
	string b_vault = 6;
	string a_token_vault = 7;
	string b_token_vault = 8;
	string a_vault_lp_mint = 9;
	string b_vault_lp_mint = 10;
	string a_vault_lp = 11;
	string b_vault_lp = 12;
	string payer_token_a = 13;
	string payer_token_b = 14;
	string payer_pool_lp = 15;
	string protocol_token_a_fee = 16;
	string protocol_token_b_fee = 17;
	string payer = 18;
	string rent = 19;
	string mint_metadata = 20;
	string metadata_program = 21;
	string vault_program = 22;
	string token_program = 23;
	string associated_token_program = 24;
	string system_program = 25;
}

message InitializeCustomizablePermissionlessConstantProductPoolIxData {
	uint64 token_a_amount = 1;
	uint64 token_b_amount = 2;
	uint32 trade_fee_numerator = 3;
	optional uint64 activation_point = 4;
	bool has_alpha_vault = 5;
	uint32 activation_type = 6;
	repeated uint32 padding = 7;
}

message UpdateActivationPointIxAccounts {
	string pool = 1;
	string admin = 2;
}

message UpdateActivationPointIxData {
	uint64 new_activation_point = 1;
}

message WithdrawProtocolFeesIxAccounts {
	string pool = 1;
	string a_vault_lp = 2;
	string protocol_token_a_fee = 3;
	string protocol_token_b_fee = 4;
	string treasury_token_a = 5;
	string treasury_token_b = 6;
	string token_program = 7;
}


message SetWhitelistedVaultIxAccounts {
	string pool = 1;
	string admin = 2;
}

message SetWhitelistedVaultIxData {
	string whitelisted_vault = 1;
}

message PartnerClaimFeeIxAccounts {
	string pool = 1;
	string a_vault_lp = 2;
	string protocol_token_a_fee = 3;
	string protocol_token_b_fee = 4;
	string partner_token_a = 5;
	string partner_token_b = 6;
	string token_program = 7;
	string partner_authority = 8;
}

message PartnerClaimFeeIxData {
	uint64 max_amount_a = 1;
	uint64 max_amount_b = 2;
}


message ProgramState {
    oneof state_oneof {
        	Config config = 1;
        	LockEscrow lock_escrow = 2;
        	Pool pool = 3;
        }
}

message ProgramIxs {
    oneof ix_oneof {
        	InitializePermissionedPoolIx initialize_permissioned_pool = 1;
        	InitializePermissionlessPoolIx initialize_permissionless_pool = 2;
        	InitializePermissionlessPoolWithFeeTierIx initialize_permissionless_pool_with_fee_tier = 3;
        	EnableOrDisablePoolIx enable_or_disable_pool = 4;
        	SwapIx swap = 5;
        	RemoveLiquiditySingleSideIx remove_liquidity_single_side = 6;
        	AddImbalanceLiquidityIx add_imbalance_liquidity = 7;
        	RemoveBalanceLiquidityIx remove_balance_liquidity = 8;
        	AddBalanceLiquidityIx add_balance_liquidity = 9;
        	SetPoolFeesIx set_pool_fees = 10;
        	OverrideCurveParamIx override_curve_param = 11;
        	GetPoolInfoIx get_pool_info = 12;
        	BootstrapLiquidityIx bootstrap_liquidity = 13;
        	CreateMintMetadataIx create_mint_metadata = 14;
        	CreateLockEscrowIx create_lock_escrow = 15;
        	LockIx lock = 16;
        	ClaimFeeIx claim_fee = 17;
        	CreateConfigIx create_config = 18;
        	CloseConfigIx close_config = 19;
        	InitializePermissionlessConstantProductPoolWithConfigIx initialize_permissionless_constant_product_pool_with_config = 20;
        	InitializePermissionlessConstantProductPoolWithConfig2Ix initialize_permissionless_constant_product_pool_with_config2 = 21;
        	InitializeCustomizablePermissionlessConstantProductPoolIx initialize_customizable_permissionless_constant_product_pool = 22;
        	UpdateActivationPointIx update_activation_point = 23;
        	WithdrawProtocolFeesIx withdraw_protocol_fees = 24;
        	SetWhitelistedVaultIx set_whitelisted_vault = 25;
        	PartnerClaimFeeIx partner_claim_fee = 26;
        }
}

