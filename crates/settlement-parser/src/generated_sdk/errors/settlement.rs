//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum SettlementError {
    /// 6000 - Invalid bet amount
    #[error("Invalid bet amount")]
    InvalidBetAmount = 0x1770,
    /// 6001 - Game contract validation failed
    #[error("Game contract validation failed")]
    GameValidationFailed = 0x1771,
    /// 6002 - Bet not found
    #[error("Bet not found")]
    BetNotFound = 0x1772,
    /// 6003 - Bet already settled
    #[error("Bet already settled")]
    BetAlreadySettled = 0x1773,
    /// 6004 - Unauthorized settlement attempt
    #[error("Unauthorized settlement attempt")]
    UnauthorizedSettlement = 0x1774,
    /// 6005 - Invalid payout distribution
    #[error("Invalid payout distribution")]
    InvalidPayoutDistribution = 0x1775,
    /// 6006 - Insufficient escrow balance
    #[error("Insufficient escrow balance")]
    InsufficientEscrowBalance = 0x1776,
    /// 6007 - Mathematical overflow in calculation
    #[error("Mathematical overflow in calculation")]
    MathOverflow = 0x1777,
    /// 6008 - Game contract rejected bet
    #[error("Game contract rejected bet")]
    BetRejected = 0x1778,
    /// 6009 - Cancellation not allowed
    #[error("Cancellation not allowed")]
    CancellationNotAllowed = 0x1779,
    /// 6010 - Invalid game program
    #[error("Invalid game program")]
    InvalidGameProgram = 0x177A,
    /// 6011 - Exposure update failed
    #[error("Exposure update failed")]
    ExposureUpdateFailed = 0x177B,
    /// 6012 - Invalid token mint
    #[error("Invalid token mint")]
    InvalidTokenMint = 0x177C,
    /// 6013 - Settlement authority mismatch
    #[error("Settlement authority mismatch")]
    SettlementAuthorityMismatch = 0x177D,
    /// 6014 - Settlement program not authorized
    #[error("Settlement program not authorized")]
    SettlementNotAuthorized = 0x177E,
    /// 6015 - Invalid authority for operation
    #[error("Invalid authority for operation")]
    InvalidAuthority = 0x177F,
    /// 6016 - CPI call failed
    #[error("CPI call failed")]
    CpiCallFailed = 0x1780,
    /// 6017 - Authorization check failed
    #[error("Authorization check failed")]
    AuthorizationFailed = 0x1781,
    /// 6018 - Cross-program authorization failed
    #[error("Cross-program authorization failed")]
    CrossProgramAuthorizationFailed = 0x1782,
    /// 6019 - Settlement authority permission denied
    #[error("Settlement authority permission denied")]
    SettlementAuthorityPermissionDenied = 0x1783,
    /// 6020 - Unauthorized program attempted settlement
    #[error("Unauthorized program attempted settlement")]
    UnauthorizedProgramSettlement = 0x1784,
    /// 6021 - Liquidity pool CPI call failed
    #[error("Liquidity pool CPI call failed")]
    LiquidityPoolCpiFailed = 0x1785,
    /// 6022 - Game program CPI call failed
    #[error("Game program CPI call failed")]
    GameProgramCpiFailed = 0x1786,
    /// 6023 - Bet validation CPI failed
    #[error("Bet validation CPI failed")]
    BetValidationCpiFailed = 0x1787,
    /// 6024 - Cancellation validation CPI failed
    #[error("Cancellation validation CPI failed")]
    CancellationValidationCpiFailed = 0x1788,
    /// 6025 - Exposure addition CPI failed
    #[error("Exposure addition CPI failed")]
    ExposureAdditionCpiFailed = 0x1789,
    /// 6026 - Exposure removal CPI failed
    #[error("Exposure removal CPI failed")]
    ExposureRemovalCpiFailed = 0x178A,
    /// 6027 - Operation already in progress
    #[error("Operation already in progress")]
    OperationInProgress = 0x178B,
    /// 6028 - Bet timing constraints violated
    #[error("Bet timing constraints violated")]
    BetTimingViolation = 0x178C,
    /// 6029 - Invalid bet data format
    #[error("Invalid bet data format")]
    InvalidBetDataFormat = 0x178D,
    /// 6030 - Game program place bet CPI failed
    #[error("Game program place bet CPI failed")]
    GamePlaceBetCpiFailed = 0x178E,
    /// 6031 - Game program cancel bet CPI failed
    #[error("Game program cancel bet CPI failed")]
    GameCancelBetCpiFailed = 0x178F,
    /// 6032 - Game program settle game CPI failed
    #[error("Game program settle game CPI failed")]
    GameSettleGameCpiFailed = 0x1790,
    /// 6033 - Game program activate game CPI failed
    #[error("Game program activate game CPI failed")]
    GameActivateGameCpiFailed = 0x1791,
    /// 6034 - Game program validation CPI failed
    #[error("Game program validation CPI failed")]
    GameValidationCpiFailed = 0x1792,
    /// 6035 - Invalid game state for operation
    #[error("Invalid game state for operation")]
    InvalidGameState = 0x1793,
    /// 6036 - Game not active
    #[error("Game not active")]
    GameNotActive = 0x1794,
    /// 6037 - Game program not authorized for settlement
    #[error("Game program not authorized for settlement")]
    GameProgramNotAuthorized = 0x1795,
    /// 6038 - Player not authorized for game
    #[error("Player not authorized for game")]
    PlayerNotAuthorized = 0x1796,
    /// 6039 - Game is full
    #[error("Game is full")]
    GameFull = 0x1797,
    /// 6040 - Cannot settle game in current state
    #[error("Cannot settle game in current state")]
    CannotSettle = 0x1798,
    /// 6041 - Settlement authority not recognized by flip program
    #[error("Settlement authority not recognized by flip program")]
    SettlementAuthorityNotRecognized = 0x1799,
    /// 6042 - Payout amount exceeds available funds
    #[error("Payout amount exceeds available funds")]
    PayoutExceedsAvailable = 0x179A,
    /// 6043 - Insufficient funds for operation
    #[error("Insufficient funds for operation")]
    InsufficientFunds = 0x179B,
    /// 6044 - Invalid odds data from game program
    #[error("Invalid odds data from game program")]
    InvalidOddsData = 0x179C,
    /// 6045 - Expected value calculation failed
    #[error("Expected value calculation failed")]
    EvCalculationFailed = 0x179D,
    /// 6046 - Invalid EV fee configuration
    #[error("Invalid EV fee configuration")]
    InvalidEvFeeConfig = 0x179E,
    /// 6047 - Invalid liquidity pool program
    #[error("Invalid liquidity pool program")]
    InvalidLiquidityPoolProgram = 0x179F,
    /// 6048 - Invalid game keeper program
    #[error("Invalid game keeper program")]
    InvalidGameKeeperProgram = 0x17A0,
    /// 6049 - Invalid rando program
    #[error("Invalid rando program")]
    InvalidRandoProgram = 0x17A1,
    /// 6050 - Invalid global config program
    #[error("Invalid global config program")]
    InvalidGlobalConfigProgram = 0x17A2,
    /// 6051 - Missing protocol fee account
    #[error("Missing protocol fee account")]
    MissingProtocolFeeAccount = 0x17A3,
    /// 6052 - Invalid game ID
    #[error("Invalid game ID")]
    InvalidGameId = 0x17A4,
    /// 6053 - Invalid payout index
    #[error("Invalid payout index")]
    InvalidPayoutIndex = 0x17A5,
    /// 6054 - Payout has already been claimed
    #[error("Payout has already been claimed")]
    PayoutAlreadyClaimed = 0x17A6,
    /// 6055 - Invalid recipient for payout
    #[error("Invalid recipient for payout")]
    InvalidRecipient = 0x17A7,
    /// 6056 - Zero payout amount not allowed
    #[error("Zero payout amount not allowed")]
    ZeroPayoutAmount = 0x17A8,
    /// 6057 - Invalid creator nonce
    #[error("Invalid creator nonce")]
    InvalidCreatorNonce = 0x17A9,
    /// 6058 - Not enough optional accounts provided for settlement.
    #[error("Not enough optional accounts provided for settlement.")]
    NotEnoughOptionalAccounts = 0x17AA,
    /// 6059 - Too many payouts for settlement
    #[error("Too many payouts for settlement")]
    TooManyPayouts = 0x17AB,
    /// 6060 - Invalid token pool account
    #[error("Invalid token pool account")]
    InvalidTokenPool = 0x17AC,
    /// 6061 - Invalid pool exposure account
    #[error("Invalid pool exposure account")]
    InvalidPoolExposure = 0x17AD,
    /// 6062 - Invalid vault account
    #[error("Invalid vault account")]
    InvalidVault = 0x17AE,
    /// 6063 - Invalid liquidity pool global config account
    #[error("Invalid liquidity pool global config account")]
    InvalidLpGlobalConfig = 0x17AF,
    /// 6064 - Invalid liquidity pool program config account
    #[error("Invalid liquidity pool program config account")]
    InvalidLpProgramConfig = 0x17B0,
    /// 6065 - Invalid protocol fee account
    #[error("Invalid protocol fee account")]
    InvalidProtocolFeeAccount = 0x17B1,
    /// 6066 - Invalid operator fee account
    #[error("Invalid operator fee account")]
    InvalidOperatorFeeAccount = 0x17B2,
    /// 6067 - Invalid affiliate fee account
    #[error("Invalid affiliate fee account")]
    InvalidAffiliateFeeAccount = 0x17B3,
    /// 6068 - No affiliate specified for fee account
    #[error("No affiliate specified for fee account")]
    NoAffiliateForFeeAccount = 0x17B4,
    /// 6069 - Game keeper CPI call failed
    #[error("Game keeper CPI call failed")]
    GameKeeperCpiFailed = 0x17B5,
    /// 6070 - Game already exists with this ID
    #[error("Game already exists with this ID")]
    GameAlreadyExists = 0x17B6,
    /// 6071 - Settlement account cannot be reset in current state
    #[error("Settlement account cannot be reset in current state")]
    CannotResetSettlement = 0x17B7,
    /// 6072 - Insufficient account space for settlement data
    #[error("Insufficient account space for settlement data")]
    InsufficientAccountSpace = 0x17B8,
    /// 6073 - Game settlement must have all payouts claimed before reuse
    #[error("Game settlement must have all payouts claimed before reuse")]
    GameSettlementNotResetable = 0x17B9,
}

impl solana_program_error::PrintProgramError for SettlementError {
    fn print<E>(&self) {
        solana_msg::msg!(&self.to_string());
    }
}

impl<T> solana_decode_error::DecodeError<T> for SettlementError {
    fn type_of() -> &'static str {
        "SettlementError"
    }
}

