//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

// #[cfg(feature = "proto")]
pub mod proto_types_parsers {
    use yellowstone_vixen_core::proto_helper_traits;
    proto_helper_traits!();
    use crate::{proto_def, types::BuyEvent};
    impl IntoProto<proto_def::BuyEvent> for BuyEvent {
        fn into_proto(self) -> proto_def::BuyEvent {
            proto_def::BuyEvent {
                buy_amount: self.buy_amount,
                virtuals_amount: self.virtuals_amount,
            }
        }
    }
    use crate::types::GraduationEvent;
    impl IntoProto<proto_def::GraduationEvent> for GraduationEvent {
        fn into_proto(self) -> proto_def::GraduationEvent {
            proto_def::GraduationEvent {
                vpool: self.vpool.to_string(),
                mint: self.mint.to_string(),
                balance: self.balance,
            }
        }
    }
    use crate::types::LaunchEvent;
    impl IntoProto<proto_def::LaunchEvent> for LaunchEvent {
        fn into_proto(self) -> proto_def::LaunchEvent {
            proto_def::LaunchEvent {
                vpool: self.vpool.to_string(),
                mint: self.mint.to_string(),
                creator: self.creator.to_string(),
            }
        }
    }
    use crate::types::SellEvent;
    impl IntoProto<proto_def::SellEvent> for SellEvent {
        fn into_proto(self) -> proto_def::SellEvent {
            proto_def::SellEvent {
                sell_amount: self.sell_amount,
                virtuals_amount: self.virtuals_amount,
            }
        }
    }
}
